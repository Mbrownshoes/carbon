ncin <- nc_open(destfile)
print(ncin)
datain <- raster(cname,varname='bio_flux_opt')
destfile
ncin
cname=destfile
datain <- raster(cname,varname='bio_flux_opt')
datain <- setMinMax(datain)
print(datain)
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
bio <- raster(cname,varname='bio_flux_opt')
monthly=12*3600*24*365
mapPointsBio <- as.data.frame(rasterToPoints(bio))
View(datain)
raster
datain
datain$bio_flux_opt
datain * monthly
datain =datain * monthly
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
destfile
print(ncin)
ncin
monthly=44*3600*24*365
datain <- raster(cname,varname='bio_flux_opt')
datain =datain * monthly
datain <- setMinMax(datain)
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
datain
print(datain)
#create csv
ncin <- nc_open(destfile)
ncin <- nc_open(cname)
print(ncin)
cname=destfile
bio <- raster(cname,varname='bio_flux_opt')
View(bio)
datain <- setMinMax(datain)
plt <- levelplot(bio, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
datain <- raster(cname,varname='bio_flux_opt')
datain <- setMinMax(datain)
#
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
monthly=44*3600*24*365
datain =datain * monthly
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
1*10^6
1*10*6
/12*44
1/12*44
1/(12*44)
monthly=12/44*3600*24*365
datain <- raster(cname,varname='bio_flux_opt')
datain <- setMinMax(datain)
datain =datain / monthly
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
*3600*44
year = 3600*24*365
1*year
1*year*44
1*year*44
datain <- raster(cname,varname='bio_flux_opt')
datain <- setMinMax(datain)
datain =datain * *year*44
datain =datain * year*44
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
datain <- raster(cname,varname='bio_flux_opt')
datain <- setMinMax(datain)
datain =datain * 44
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
datain =datain * 44*3600*24*31
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
2.34 /1000000
mol=2.34 /1000000
mol
mol*3600
mol*3600*44
datain <- raster(cname,varname='bio_flux_opt')
datain <- setMinMax(datain)
# plot an example
world.outlines <- map('world',plot=FALSE)
world.outlines.sp <- map2SpatialLines(world.outlines, proj4string = CRS("+proj=longlat"))
mapTheme <- rasterTheme(region = rev(brewer.pal(10, "RdBu")))
plt <- levelplot(datain, margin = F, cuts=30, pretty=TRUE, par.settings = mapTheme,
main="Carbon Flux")
plt + layer(sp.lines(world.outlines.sp, col = "black", lwd = 0.5))
mol = -4e-06
mol
mol*3600*44
mol*3600*44*24
mol*3600*44*24*365
mol*3600*44*24
mol*3600*44*24*30
mol*3600*44*24
5/1000000
mol=5/1000000
mol*3600*44*24
mol*44*24
mol*44*3600
mol*44*3600*24
mol*44*3600*24*30
mol*44*3600*24*365
View(ncin)
print(ncin)
mol*(12/44)*3600*24*365
mol*44*3600*24*365
mol
mol*44*3600*24*365
mol*(12/44)*3600*24*365
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,'2012',i,'.nc')
# print(url)
destfile <- paste0('Data/','2012',i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt*(12/44)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0('2012',i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
#bind all months
x <- bind_rows(datalist)
#download several months
datalist =list()
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,'2012',i,'.nc')
# print(url)
destfile <- paste0('Data/','2012',i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt*(12/44)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0('2012',i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
#bind all months
x <- bind_rows(datalist)
saveRDS(x, file="bioPoints.rds")
# remove rows with 0 flux
# b <- data.table(x)
b=dplyr::mutate(x, bio_flux_opt = round(bio_flux_opt,2))
b=data.table(dplyr::filter(b, bio_flux_opt !=0))
View(x)
View(b)
#split by location
#use to drop split columns - works but not nested correctly
mysplitDT <- function(x, bycols){
split( x[, !bycols, with=FALSE], x[, bycols, with=FALSE] )
}
byXY <- mysplitDT(b, by=c("x", "y"))
#remove empyty dataframes (over the ocean)
byXY=byXY[sapply(byXY,nrow) >0]
#make list of lists as prep to convert to json
listLoc =lapply(names(byXY),function(z){
n=byXY[[z]]$yymm
m= lapply(seq(nrow(byXY[[z]])),function(i){
byXY[[z]][i]$bio_flux_op
})
names(m) <- n
list(loc=z,vals=m)
})
save(listLoc, file = "listLoc.RData")
jsonOut<-toJSON(listLoc,pretty=FALSE)
jsonOut=gsub('"2012', '"12', jsonOut)
cat(jsonOut,file='flux.json')
mol*(12/44)*3600*24*365
mol*(44/12)*3600*24*365
mol
#download several months
datalist =list()
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,'2012',i,'.nc')
# print(url)
destfile <- paste0('Data/','2012',i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0('2012',i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
#bind all months
x <- bind_rows(datalist)
saveRDS(x, file="bioPoints.rds")
x <- readRDS("bioPoints.rds")
library(ggplot2)
qplot(x,bio_flux_opt)
head(x0)
head(x)
qplot(x,x$bio_flux_opt)
str(x)
qplot(x,x=bio_flux_opt)
qplot(x,x=bio_flux_opt)
qplot(data=x,x=bio_flux_opt)
qplot(data=x,x=bio_flux_opt,y=yymm)
x$bi
x$bio_flux_opt
x$bio_flux_opt=x$bio_flux_opt*(44/12)*3600*24*365
qplot(data=x,x=bio_flux_opt)
qplot(data=x,x=bio_flux_opt,y=yymm,facets = ~yymm)
qplot(data=x,x=yymm,y=bio_flux_opt,facets = ~yymm)
# remove rows with 0 flux
# b <- data.table(x)
b=dplyr::mutate(x, bio_flux_opt = round(bio_flux_opt,2))
b=data.table(dplyr::filter(b, bio_flux_opt !=0))
qplot(data=b,x=yymm,y=bio_flux_opt,facets = ~yymm)
qplot(data=x,x=bio_flux_opt,y=yymm,color = yymm)
#split by location
#use to drop split columns - works but not nested correctly
mysplitDT <- function(x, bycols){
split( x[, !bycols, with=FALSE], x[, bycols, with=FALSE] )
}
byXY <- mysplitDT(b, by=c("x", "y"))
#remove empyty dataframes (over the ocean)
byXY=byXY[sapply(byXY,nrow) >0]
names(byXY)
head(byXY)
#make list of lists as prep to convert to json
listLoc =lapply(names(byXY),function(z){
n=byXY[[z]]$yymm
m= lapply(seq(nrow(byXY[[z]])),function(i){
byXY[[z]][i]$bio_flux_op
})
names(m) <- n
list(loc=z,vals=m)
})
save(listLoc, file = "listLoc.RData")
jsonOut<-toJSON(listLoc,pretty=FALSE)
jsonOut=gsub('"2012', '"12', jsonOut)
cat(jsonOut,file='flux.json')
max(x$bio_flux_opt)
x <- readRDS("bioPoints.rds")
max(x$bio_flux_opt)
min(x$bio_flux_opt)
datalist =list()
for (i in seq(2012,2015,1)) print(y){
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,y,i,'.nc')
# print(url)
destfile <- paste0('Data/',y,i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(y,i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
}
datalist =list()
for (i in seq(2012,2015,1)){ print(y)
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,y,i,'.nc')
# print(url)
destfile <- paste0('Data/',y,i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(y,i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
}
for (i in seq(2012,2015,1)){
print(y)
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,y,i,'.nc')
# print(url)
destfile <- paste0('Data/',y,i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(y,i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
}
for (i in seq(2012,2015,1)){
print(y)}
seq(2012,2015,1)
for (y in seq(2012,2015,1)){
print(y)}
#download several months
datalist =list()
for (y in seq(2012,2015,1)){ print(y)
for (i in 1:12){
site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
url = paste0(site,y,i,'.nc')
# print(url)
destfile <- paste0('Data/',y,i,'.nc')
download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(y,i))
datalist[[i]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
}
str(datalist)
destfile
destfile
#download several months
datalist =list()
datalist[[i]]=c(1,2)
datalist
datalist[[2]]=c(1,2)
datalist
datalist[2012][[2]]=c(1,2)
datalist
datalist.'2012'[[2]]=c(1,2)
datalist[2012][[2]]=c(1,2)
datalist[2012][[2]]=c(1,2)
#download several months
datalist =list()
datalist[2012][[2]]=c(1,2)
datlist
datalist
#download several months
datalist =list()
datalist
datalist[2012][[2]]=c(1,2)
datalist
#download several months
datalist =list()
datalist[[2012][[2]]=c(1,2)
datalist[[2012]][[2]]=c(1,2)
#download several months
datalist =list()
i
i=1
datalist[[i]] <- mapPointsBio
datalist[[2]] <- mapPointsBio
datalist
str(datalist)
head(mapPointsBio)
y
i
paste0(y,i)
mapPointsBio <- as.data.frame(rasterToPoints(bio))
head(mapPointsBio)
# mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(y,i))
head(mapPointsBio)
mapPointsBio <- as.data.frame(rasterToPoints(bio))
# mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(yr,i))
y
yr=2015
paste0(yr,i)
# mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(yr,i))
head(mapPointsBio)
j=0
j++
''
j
j+=1
j+1
datalist =list()
j=0
for (yr in seq(2012,2015,1)){ print(yr)
for (i in 1:12){
j=j+1
print(d)
# site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
# url = paste0(site,y,i,'.nc')
# print(url)
destfile <- paste0('Data/',y,i,'.nc')
# download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
# mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt #*(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(yr,i))
datalist[[j]] <- mapPointsBio
# write.csv(mapPointsBio, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
}
str(datalist)
#bind all months
x <- bind_rows(datalist)
saveRDS(x, file="bioPoints.rds")
x$bio_flux_opt=x$bio_flux_opt*(44/12)*3600*24*365
# remove rows with 0 flux
# b <- data.table(x)
b=dplyr::mutate(x, bio_flux_opt = round(bio_flux_opt,2))
b=data.table(dplyr::filter(b, bio_flux_opt !=0))
head(b)
#split by location
#use to drop split columns - works but not nested correctly
mysplitDT <- function(x, bycols){
split( x[, !bycols, with=FALSE], x[, bycols, with=FALSE] )
}
byXY <- mysplitDT(b, by=c("x", "y"))
#remove empyty dataframes (over the ocean)
byXY=byXY[sapply(byXY,nrow) >0]
head(byXY)
#make list of lists as prep to convert to json
listLoc1 =lapply(names(byXY),function(z){
n=byXY[[z]]$yymm
m= lapply(seq(nrow(byXY[[z]])),function(i){
byXY[[z]][i]$bio_flux_op
})
names(m) <- n
list(loc=z,vals=m)
})
save(listLoc1, file = "listAllYears.RData")
jsonOut<-toJSON(listLoc1,pretty=FALSE, auto_unbox = TRUE)
cat(jsonOut)
jsonOut=gsub('"2012', '"12', jsonOut)
jsonOut=gsub('"2013', '"13', jsonOut)
jsonOut=gsub('"2014', '"14', jsonOut)
jsonOut=gsub('"2015', '"15', jsonOut)
cat(jsonOut,file='fluxNew.json')
21*24
