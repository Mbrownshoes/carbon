head(dat)
head[dat]
head[result]
result
write.csv(result, "/Users/mathewbrown/projects/bikeRoute/newbikedatafile.csv", row.names=FALSE)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatafile.txt", id="route1")
head(result)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',4'))
dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X1<-as.numeric(as.character(dat$X2))
dat$X2<-as.numeric(as.character(dat$X1))
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
dat<-unlist(strsplit(dat, ',4'))
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
path = "/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt"
dat<-scan(path, what="character")
head(dat)
dat<-scan(path, what="character")
head(dat)
dat<-scan(path, what="character")
head(dat)
dat<-unlist(strsplit(dat, ',4'))
head(dat)
dat<-unlist(strsplit(dat, ',4'))
head(dat)
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-7'))
dat[-1]<-paste("4", dat[-1], sep="")
head(dat)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-7'))
dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X1<-as.numeric(as.character(dat$X2))
dat$X2<-as.numeric(as.character(dat$X1))
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
head(result)
path
dat<-scan(path, what="character")
dat<-unlist(strsplit(dat, ',-7'))
head(dat)
dat<-unlist(strsplit(dat, ',-'))
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
head(dat)
dat[-1]
head(dat)
dat[-1]
dat[1]
dat[-1]
paste("4", dat[-1], sep="")
head(dat)
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
head(dat)
dat$X1<-as.numeric(as.character(dat$X2))
head(dat)
dat$X2<-as.numeric(as.character(dat$X1))
head(dat)
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
#dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
head(dat)
dat <- dat[ , c("X2", "X1")]
head(dat)
dat$time<-1:nrow(dat)
head(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
head(dat)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
#dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
dat <- dat[ , c("X2", "X1")]
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
#   latitude longitude time     id
#1  40.72239 -73.99517    1 route1
#2  40.72158 -73.99548    2 route1
#3  40.72128 -73.99472    3 route1
#4  40.72089 -73.99376    4 route1
#5  40.72158 -73.99348    5 route1
write.csv(result, "/Users/mathewbrown/projects/bikeRoute/newbikedatafile.csv", row.names=FALSE)
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
#dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
dat <- dat[ , c("X2", "X1")]
head(dat)
names(dat)[1:2]<-c("latitude", "longitude")
head(dat)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
#dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
dat <- dat[ , c("X2", "X1")]
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
#   latitude longitude time     id
#1  40.72239 -73.99517    1 route1
#2  40.72158 -73.99548    2 route1
#3  40.72128 -73.99472    3 route1
#4  40.72089 -73.99376    4 route1
#5  40.72158 -73.99348    5 route1
write.csv(result, "/Users/mathewbrown/projects/bikeRoute/newbikedatafile.csv", row.names=FALSE)
dat<-scan(path, what="character")
dat<-unlist(strsplit(dat, ',-'))
head(dat)
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
head(dat)
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
#dat[-1]<-paste("4", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
head(dat)
dat<-scan(path, what="character")
head(dat)
dat<-unlist(strsplit(dat, ',-'))
head(dat)
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
dat[-1]<-paste("-1", dat[-1], sep="")
head(dat)
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
dat[-1]<-paste("-", dat[-1], sep="")
head(dat)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
dat[-1]<-paste("-", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
dat <- dat[ , c("X2", "X1")]
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
#   latitude longitude time     id
#1  40.72239 -73.99517    1 route1
#2  40.72158 -73.99548    2 route1
#3  40.72128 -73.99472    3 route1
#4  40.72089 -73.99376    4 route1
#5  40.72158 -73.99348    5 route1
write.csv(result, "/Users/mathewbrown/projects/bikeRoute/newbikedatafile.csv", row.names=FALSE)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
dat[-1]<-paste("-", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
dat <- dat[ , c("X2", "X1")]
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
#   latitude longitude time     id
#1  40.72239 -73.99517    1 route1
#2  40.72158 -73.99548    2 route1
#3  40.72128 -73.99472    3 route1
#4  40.72089 -73.99376    4 route1
#5  40.72158 -73.99348    5 route1
write.csv(result, "/Users/mathewbrown/projects/bikeRoute/newbikedatafile.csv", row.names=FALSE)
result<-reformatData("/Users/mathewbrown/projects/bikeRoute/bikedatfile.txt", id="route1")
head(result)
reformatData<-function(path, id){
dat<-scan(path, what="character")
#With more time I would have used regular expressions rather than
#this terrible alternative.
dat<-unlist(strsplit(dat, ',-'))
dat[-1]<-paste("-", dat[-1], sep="")
dat<-data.frame(matrix(unlist(strsplit(dat, ",")), ncol=2, byrow=T))
dat$X2<-as.numeric(as.character(dat$X2))
dat$X1<-as.numeric(as.character(dat$X1))
dat <- dat[ , c("X2", "X1")]
dat$time<-1:nrow(dat)
dat$id<-id
names(dat)[1:2]<-c("latitude", "longitude")
return(dat)
}
#   latitude longitude time     id
#1  40.72239 -73.99517    1 route1
#2  40.72158 -73.99548    2 route1
#3  40.72128 -73.99472    3 route1
#4  40.72089 -73.99376    4 route1
#5  40.72158 -73.99348    5 route1
write.csv(result, "/Users/mathewbrown/projects/bikeRoute/newbikedatafile.csv", row.names=FALSE)
head(iris)
iris
head(iris)
typeof(iris)
iris["1"]
iris[1]
head(iris)
iris[1][1]
iris[1][2]
iris[1][1]
iris[1]
iris[2]
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "ggplot2", "intervals", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "RCurl", "rpart", "spatial", "survival", "XML"))
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("tibble")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(iris)
summary(iris)
plot(pressure)
plot(pressure)
```{r pressure, echo=TRUE}
plot(pressure)
plot(pressure,echo=FALSE)
plot(pressure)
jsonlite
install.packages("jsonlite")
library(jsonlite)
cat(
paste(
'<script>
var data = ',toJSON(iris[c(5,1,2)]),';
</script>'
, sep="")
)
iris[c(5,1,2)]
head(iris)
head(iris)
cat(
paste(
'<script>
var data = ',toJSON(iris[c(5,1,2)]),';
</script>'
, sep="")
)
data
a = c("A", "B")
a = c("A", "B")
b = c("L", "M")
c = c("X", "Y")
c
var1 = rep(a, length(b))
var1
var1=var1[order(var1)]
var1
var2 <- rep(b, length(a))
var()
var2
df = data.frame(a = var1, b = var2)
df
list(rep(1, 4), rep(2, 3), rep(3, 2), rep(4, 1))
mapply(rep, 1:4, 4:1)
noise <- function(n, mean, std) {
rnorm(n, mean, std)
}
noise(5, 1, 2)
noise <- function(n, mean, std) {
rnorm(n, mean, std)
}
noise(5, 1, 2)
noise <- function(n, mean, std) {
rnorm(n, mean, std)
}
noise(5)
noise <- function(n, mean, std) {
rnorm(n, mean, std)
}
noise(5, 1, 2)
rnorm(n)
rnorm(2)
rnorm(3)
rnorm(3,1)
rnorm(3,1)
rnorm(3,100)
rnorm(3,100,2)
rnorm(3,100,2000)
noise(5, 1, 2)
noise(5, 1, 2)
mapply(noise,1:5,1:5,2)
my.fun <- function(x,y){return(x+y)}
X <- cbind(1:5, 6:10)
X
mapply(my.fun, X[,1], X[,2])
install.packages("RSelenium")
library(RSelenium)
rD <- rsDriver(browser = "phantomjs")
library(RSelenium)
rD <- rsDriver(browser = "phantomjs")
remDr <- rD[['client']]
remDr$navigate("http://www.r-project.org")
remDr$screenshot(file = tf <- tempfile(fileext = ".png"))
shell.exec(tf) # on windows
remDr$close()
rD$server$stop()
rD <- rsDriver(browser = "phantomjs")
remDr <- rD[['client']]
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox"
)
remDr$open()
remDr$navigate("http://www.google.com/ncr")
devtools::install_github("wch/webshot")
library(webshot)
webshot("https://www.r-project.org/", "r.png")
webshot::install_phantomjs()
webshot("https://www.r-project.org/", "r.png")
webshot("https://www.habseyesontheprize.com/", "r.png")
webshot("https://www.habseyesontheprize.com/", "r.png",cliprect = "viewport")
webshot("https://ca.yahoo.com/?p=us", "r.png",cliprect = "viewport")
webshot("https://ca.news.yahoo.com/", "r.png",cliprect = "viewport")
webshot("https://ca.news.yahoo.com/", "r.png",cliprect = "viewport")
webshot("https://ca.news.yahoo.com/", "r.png",cliprect = "viewport")
webshot("https://ca.sports.yahoo.com/", "r.png",cliprect = "viewport")
webshot("https://ca.sports.yahoo.com/", "r.png",cliprect = "viewport")
webshot("https://ca.sports.yahoo.com/", "r.png")
webshot("https://ca.sports.yahoo.com/", "r.png", delay = 0.5)
webshot("https://ca.sports.yahoo.com/", "r.png",cliprect = "viewport" , delay = 2)
webshot("https://ca.sports.yahoo.com/", "r.png",cliprect = c(200, 5, 400, 300))
webshot("https://ca.sports.yahoo.com/", "r.png", vwidth = 992, vheight = 744)
webshot("https://ca.sports.yahoo.com/", "r.png", vwidth = 1024, vheight = 768)
webshot("https://ca.sports.yahoo.com/", "r.png", delay = 0.5,  selector = ".darla-container")
webshot("https://ca.sports.yahoo.com/", "r.png", delay = 0.5,  selector = "#mrt-node-Lead-1-Ad")
webshot("https://ca.news.yahoo.com/", "r.png", delay = 0.5,  selector = "#mrt-node-Lead-1-Ad")
webshot("https://ca.news.yahoo.com/", "r.png", delay = 0.5,  selector = "#mrt-node-Lead-1-Ad")
2024
20*24
1820
16*20
14*24
16*24*47
16*30*47
14*30*47
14*30
16*30
(16*24)/19595
(16*24)
19595/(16*24)
require(ncdf4)
library(raster)
library(maptools)
library(maps)
library(rasterVis)
library(dplyr)
library(jsonlite)
library(tidyr)
library(data.table)
library(ggplot2)
workdir <-'//Users//mathewbrown//projects//Rstuff//carbonFlux'
setwd(workdir)
# get regions data
site = 'ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/regions.nc'
download.file(site,'Data/regions.nc')
ncin <- nc_open('Data/regions.nc')
print(ncin)
regions <- raster(destfile)
regions <- raster('Data/regions.nc')
regions <- raster('Data/regions.nc',varname='regions')
regions <- raster('Data/regions.nc',varname='regions')
View(regions)
View(regions)
regionPoints <- as.data.frame(rasterToPoints(regions))
View(regionPoints)
View(ncin)
print(ncin)
regions <- raster('Data/regions.nc',varname='ocean_regions')
regionPoints <- as.data.frame(rasterToPoints(regions))
View(regionPoints)
View(regionPoints)
regionPoints <- as.data.frame(rasterToPoints(regions))
excl <- data.frame(x = c(regionPoints$x, regionPoints$y))
excl
View(excl)
excl <- data.frame(x = c(regionPoints$x, regionPoints$y),
y = c(regionPoints$y, regionPoints$x))
#split by location
View(excl)
# convert netcdf to raster http://geog.uoregon.edu/GeogR/topics/netcdf-to-raster.html
require(ncdf4)
library(raster)
library(maptools)
library(maps)
library(rasterVis)
library(dplyr)
library(jsonlite)
library(tidyr)
library(data.table)
library(ggplot2)
workdir <-'//Users//mathewbrown//projects//Rstuff//carbonFlux'
setwd(workdir)
#download several months
datalist =list()
j=0
for (yr in seq(2015,2015,1)){ print(yr)
for (i in 1:12){
j=j+1
# print(d)
# site <- "ftp://aftp.cmdl.noaa.gov/products/carbontracker/co2/CT2016/fluxes/monthly/CT2016.flux1x1."
i = sprintf("%02d", i)
# url = paste0(site,y,i,'.nc')
# print(url)
destfile <- paste0('Data/',yr,i,'.nc')
# download.file(url,destfile)
#create csv
ncin <- nc_open(destfile)
bio <- raster(destfile,varname='bio_flux_opt')
mapPointsBio <- as.data.frame(rasterToPoints(bio))
mapPointsBio$bio_flux_opt = mapPointsBio$bio_flux_opt *(44/12)*3600*24*365
#create timestamp column
mapPointsBio <- mutate(mapPointsBio,yymm=paste0(yr,i))
datalist[[j]] <- mapPointsBio
# write.csv(b, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
}
}
#bind all months
x <- bind_rows(datalist)
saveRDS(x, file="bioPoints.rds")
# x$bio_flux_opt=x$bio_flux_opt*(44/12)*3600*24*365
# remove rows with 0 flux
# b <- data.table(x)
b=dplyr::mutate(x, bio_flux_opt = round(bio_flux_opt,2))
c<-anti_join(b, regionPoints, by = c("x", "y"))
View(c)
ggplot(regionPoints$x)
plot(regionPoints$x)
paste0(substr(destfile,1,nchar(destfile)-3)
)
write.csv(c, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
write.csv(c, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
x <- readRDS("bioPoints.rds")
# x$bio_flux_opt=x$bio_flux_opt*(44/12)*3600*24*365
# remove rows with 0 flux
# b <- data.table(x)
b=dplyr::mutate(x, bio_flux_opt = round(bio_flux_opt,2))
write.csv(b, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
write.csv(c, file=paste0(substr(destfile,1,nchar(destfile)-3),".csv"), row.names=F)
View(c)
